#include "w25q_spi.h"
//---------------------------------------------------------
#define W25_ENABLE_RESET 0x66
#define W25_RESET 0x99
#define W25_READ 0x03
#define W25_GET_JEDEC_ID 0x9f
#define W25_UNIQUE_ID 0x4B
#define W25_WRITE 0x02
//---------------------------------------------------------
#define cs_set() HAL_GPIO_WritePin(GPIOA,GPIO_PIN_4,GPIO_PIN_RESET)
#define cs_reset() HAL_GPIO_WritePin(GPIOA,GPIO_PIN_4,GPIO_PIN_SET)
//---------------------------------------------------------
extern SPI_HandleTypeDef hspi1;
extern UART_HandleTypeDef huart1;
//---------------------------------------------------------
typedef struct
{
  uint16_t  PageSize;
  uint32_t  PageCount;
  uint32_t  SectorSize;
  uint32_t  SectorCount;
  uint32_t  BlockSize;
  uint32_t  BlockCount;
  uint32_t  NumKB;
  uint8_t   SR1;
  uint8_t   SR2;
  uint8_t   SR3;
}w25_info_t;
w25_info_t  w25_info;
uint8_t buf[10];
//---------------------------------------------------------
void SPI1_Send(uint8_t *dt,uint16_t cnt)
{
	HAL_SPI_Transmit(&hspi1, dt, cnt, 1000);
}
//---------------------------------------------------------
void SPI1_Recv(uint8_t *dt,uint16_t cnt)
{
	HAL_SPI_Receive(&hspi1, dt, cnt, 1000);
}
//---------------------------------------------------------
void W25_Reset(void)
{
	cs_set();
	buf[0] = W25_ENABLE_RESET;
	buf[1] = W25_RESET;
	SPI1_Send(buf, 2);
	cs_reset();
}
//---------------------------------------------------------
void W25_Read_Data(uint32_t addr,uint8_t* data,uint32_t sz)
{
	cs_set();
	buf[0] = W25_READ;
	buf[1] = (addr >> 16 ) & 0xFF;
	buf[2] = (addr >> 8 ) & 0xFF;
	buf[3] =  addr & 0xFF;
	SPI1_Send(tx_buf, 4);
	SPI1_Recv(data, sz);
	cs_reset();
}
//---------------------------------------------------------
void W25_Write_Data(uint32_t addr,uint8_t* data,uint32_t sz)
{

}
//---------------------------------------------------------
uint64_t W25_Read_ID(void)
{
	uint8_t dt[12];
	buf[0] = W25_UNIQUE_ID;
	cs_set();
	SPI1_Send(buf, 1);
	SPI1_Recv(dt,12);
	cs_reset();
	uint64_t received_id = 0;
	for (int i = 4;i < 12;i++)
	{
		received_id |= dt[i];
		if (i!=11)
			received_id <<= 8;
	}
	return received_id;
}
//---------------------------------------------------------
uint32_t W25_Read_Jedec_ID(void)
{
	uint8_t dt[4];
	buf[0] = W25_GET_JEDEC_ID;
	cs_set();
	SPI1_Send(buf, 1);
	SPI1_Recv(dt,3);
	cs_reset();
	return (dt[0] << 16) | (dt[1] << 8) | dt[2];
}
//---------------------------------------------------------
void W25_Ini(void)
{
	HAL_Delay(100);
	W25_Reset();
	HAL_Delay(100);
}
//---------------------------------------------------------

